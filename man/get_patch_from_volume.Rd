% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_patches.R
\name{get_patch_from_volume}
\alias{get_patch_from_volume}
\alias{get_num_patches}
\alias{norm_pad}
\alias{get_mask_patches}
\title{Get Patches from 3D Volume}
\usage{
get_patch_from_volume(vol, mask = NULL, patchsize, verbose = TRUE,
  pad = TRUE, normalize = TRUE, contrast, seed = NULL,
  run_mask_patches = TRUE, peak_estimator = c("Python", "R"))

get_num_patches(mask)

norm_pad(vol, mask = NULL, patchsize, verbose = TRUE, pad = TRUE,
  normalize = TRUE, peak_estimator = c("Python", "R"), contrast)

get_mask_patches(mask, patchsize, pad = TRUE, seed = NULL,
  verbose = TRUE)
}
\arguments{
\item{vol}{3D array or \code{nifti} image}

\item{mask}{binary 3D array or \code{nifti} image, for the brain usually}

\item{patchsize}{Vector of length 2 (or more)}

\item{verbose}{print diagnostic messages}

\item{pad}{Run \code{\link{pad_image}} on the image
before getting patches (pads then normalizes if \code{normalize = TRUE})}

\item{normalize}{Run \code{\link{normalize_image}} on the image
before getting patches}

\item{contrast}{What imaging sequence of MRI is this volume, passed
to \code{\link{normalize_image}}}

\item{seed}{Seed for random sampling of indices.  If \code{NULL},
no sampling is done, passed to \code{\link{mask_indices}}}

\item{run_mask_patches}{Should the patches for the mask be
made as well?}

\item{peak_estimator}{Which functions to use to estimate peak,
either wrapper Python code or native R code.}

\item{...}{not used}
}
\value{
A list of image and mask Patches
}
\description{
Get Patches from 3D Volume
}
\examples{
user = Sys.getenv("USER")
if (user == "johnmuschelli") {
reticulate::use_python(paste0(
"/Library/Frameworks/Python.framework/Versions/3.5/bin/python3"))
mpl = reticulate::import("matplotlib")
mpl$use('TkAgg')
}
library(neurobase)
fname = system.file("extdata", "MPRAGE.nii.gz", package = "flexconn")
vol = readnii(fname)
mask = vol > 0
patchsize = c(5, 5)
verbose = TRUE
patch = get_patch_from_volume(vol, mask, patchsize = patchsize,
contrast = "T1")

rm(patch)

patch = get_patch_from_volume(vol, mask, patchsize = c(1,1,1),
contrast = "T1")
rm(patch)
}
